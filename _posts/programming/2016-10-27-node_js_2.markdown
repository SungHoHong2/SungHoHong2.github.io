---
published: true
title: Node Js Express Basic 
layout: post
category: programming
permalink: /programming/
---



### Node.js Express Basic



#### app.js 

``` javascript 


var express = require('express')
var app = express();
var logger = require('./logger');
app.use(logger)

var bodyParser = require('body-parser');
var parseUrlencoded = bodyParser.urlencoded({ extended : false });


var blocks = {
    'Fixed' : 'Fastened securely in position',
    'Movable' : 'Cpabale of being moved',
    'Rotating' : 'Moving in a circle around its center'
};


app.use(express.static('public'));

app.get('/', function(request, response){
    response.sendFile(__dirname + '/public/index.html');
});


app.param('name', function(request, response, next){
    var name = request.params.name;
    var block = name[0].toUpperCase() + name.slice(1).toLowerCase();

    request.blockName = block;
    next();
});


app.route('/blocks')
    .get(function(request, response){
        if(request.query.limit >= 0){
            response.json(blocks.slice(0, request.query.limit));
        }else{
            response.json(Object.keys(blocks));
        }
    })
   .post(parseUrlencoded, function(request, response){
       var newBlock = request.body;
       blocks[newBlock.name] = newBlock.description
       response.status(201).json(newBlock.name);

    });


app.route('/blocks/:name')
    .get(function(request, response){
        var description = blocks[request.blockName];
        if(!description){
            response.status(404).json('No desription found for '+request.params.name);
        }else{
            response.json(description);
        }
    })
    .delete(function(request, response){
           delete blocks[request.blockName];
           response.sendStatus(200);
    });


app.listen(8000);



```

### client.js 


``` javascript



function main(){

   $.get('/blocks', appendToList);

   function appendToList(blocks){

    var list = [];

    for(var i in blocks){
        block = blocks[i];


        var items =
        $('<span/>').append(
            $('<a/>').attr('href','/blocks/'+block).text(block)
        ).append($('<a/>').attr('href','#').attr('data-block', block).text('<delete>'));

        list.push(items);

    }

        $(list).each(function(index, item){
            $('.block-list').append($('<li/>').append(item));
        });



       $('a[data-block]').click(function(event){
            if(!confirm('Are you sure?')){
                return false;
            }

            var target = $(event.currentTarget);

            $.ajax({
                type : 'DELETE',
                url: '/blocks/'+target.data('block')
            }).done(function(){
                target.parents('li').remove();
            });

       });

   }



   $('form').on('submit',function(event){

    event.preventDefault();
    var form = $(this);
    var blockData = form.serialize();

    $.ajax({
        type: 'POST',
        url : '/blocks',
        data : blockData
    }).done(function(blockName){
        appendToList([blockName]);
        form.trigger('reset');
    });
   })


}



$(document).ready(function(){
    main();
});


```